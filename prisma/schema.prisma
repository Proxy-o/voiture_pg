// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Session {
    id        String   @id @default(uuid())
    userId    Int     // Changed BigInt to Int for SQLite compatibility
    expiresAt DateTime
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Settings {
    id                   Int      @id @default(autoincrement()) // Changed BigInt to Int
    company_logo         String?   
    company_name         String    
    owner_name           String    
    owner_lastname       String    
    vat_number           String    
    street               String    
    zip_code             String    
    city                 String    
    country              String    
    owner_email          String    
    owner_phone          String    
    owner_website        String    
    bank_name            String    
    bank_account_number  String    
    bic_number           String    
    bank_name2           String?   
    bank_account_number2 String?   
    bic_number2          String?   
    created_at           DateTime? @default(now())
    updated_at           DateTime? @default(now()) @updatedAt

    users   User[]
    Car     Car[]
    Client  Client[]
    Invoice Invoice[]
}

model User {
    id                Int      @id @default(autoincrement()) // Changed BigInt to Int
    username          String    @unique 
    email             String    @unique 
    email_verified_at DateTime?
    password          String    
    remember_token    String?   
    created_at        DateTime  @default(now())
    updated_at        DateTime  @updatedAt
    compagny_id       Int      // Changed BigInt to Int
    is_admin          Boolean   @default(false)

    sessions Session[]
    compagny Settings  @relation(fields: [compagny_id], references: [id])
}

model Car {
    id                 Int      @id @default(autoincrement()) // Changed BigInt to Int
    chassis_number     String    @unique 
    brand              String    
    model              String    
    car_type           String    
    transmission       String    
    first_registration DateTime
    mileage            Int
    engine_power       Int
    cylinder           Int
    fuel               String    
    co2                String    
    color              String    
    number_keys        Int
    cer_of_conf        Boolean   @default(false)
    inspection_form    Boolean   @default(false)
    car_pass           Boolean   @default(false)
    register_cert      Boolean   @default(false)
    created_at         DateTime? @default(now())
    updated_at         DateTime? @default(now())

    compagny_id Int
    settings    Settings  @relation(fields: [compagny_id], references: [id])
    Invoice     Invoice[]
}

model Client {
    id            Int      @id @default(autoincrement()) // Changed BigInt to Int
    is_company    Boolean
    surname       String?   
    firstname     String?   
    company_name  String?   
    btw_number    String?   
    street        String    
    postal_code   String    
    city          String    
    country       String    
    email         String?   
    phone_number  String?   
    mobile_number String?   
    created_at    DateTime? @default(now())
    updated_at    DateTime? @default(now())

    compagny_id Int
    settings    Settings  @relation(fields: [compagny_id], references: [id])
    Invoice     Invoice[]
}

model Invoice {
    id         Int      @id @default(autoincrement()) // Changed BigInt to Int
    client_id  Int
    car_id     Int
    company_id Int

    date           DateTime
    due_date       DateTime
    advance        Decimal
    amount         Decimal
    payment_method String
    paid_status    Boolean
    memo           String?   
    created_at     DateTime? @default(now())
    updated_at     DateTime? @default(now())

    client   Client    @relation(fields: [client_id], references: [id])
    car      Car       @relation(fields: [car_id], references: [id])
    settings Settings? @relation(fields: [company_id], references: [id])
}
